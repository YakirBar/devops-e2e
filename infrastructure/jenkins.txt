
  # jenkins:
  #   image: jenkins/jenkins:lts
  #   container_name: JenkinsCI
  #   ports:
  #     - 4002:8080

    Locale Plugin

  #  WebHook -> Ngrok
  # RepoURL = https://github.com/YakirBar/BarTECH.git
  # PayloadURL :https://6b4d-46-117-150-128.ngrok-free.app/github-webhook/

  # agent:
  #   image: jforge/jenkins-inbound-agent:latest
  #   container_name: JenkinsAgent
  #   privileged: true
  #   environment:
  #     DIND: "true"
  #     TINI_SUBREAPER: "true"
  #     JENKINS_WEB_SOCKET: "true"
  #     JENKINS_AGENT_NAME: "agent" //Name
  #     JENKINS_URL: "http://jenkins:8080" //By DNS
  #     JENKINS_SECRET: "74a566b96b9e02490cec9796372e23782bac544cc3026671dfcc52f2f4679a1f" //Secret

  # agent {
  #       label 'agent' //Name
  #   }

  environment {
        DOCKERHUB_CREDENTIALS = credentials('DockerHub Personal Access Token')
    }


  stage('Checkout') {
            steps {
                checkout scm
                sh 'ls -la'
            }
        }
        stage('Build') {
            steps {
                script {
                    // Get the latest commit message
                    def commitMessage = sh(script: "git log -1 --pretty=%B", returnStdout: true).trim()
                    // Extract the DockerHub tag from the second word in the commit message
                    def dockerTag = commitMessage.tokenize(' ')[1]
                    echo "Docker Tag: ${dockerTag}"
                    
                    // Build Docker image with the extracted tag
                    sh """
                        cd FullStack\\ Web\\ Development/client/
                        docker build -t yakirbartech/${dockerTag} -f "../../DevOps Developer Expert/docker/react.dockerfile" .
                    """
                }
            }
        }
        stage('Login') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('Push') {
            steps {
                script {
                    // Push Docker image with the extracted tag
                    def commitMessage = sh(script: "git log -1 --pretty=%B", returnStdout: true).trim()
                    def dockerTag = commitMessage.tokenize(' ')[1]
                    sh "docker push yakirbartech/${dockerTag}"
                }
            }
        }